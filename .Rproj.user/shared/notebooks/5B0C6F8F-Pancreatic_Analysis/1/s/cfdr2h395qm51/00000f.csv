"0","reticulate::repl_python()"
"0","import seaborn as sns"
"0","import matplotlib.pyplot as plt"
"0","import numpy as np"
"0",""
"0","def plot_combined_categorical_statistics(data, title=""Categorical Statistics""):"
"0","    # Create a copy of the data to avoid modifying the original DataFrame"
"0","    data_copy = data.copy()"
"0","    "
"0","    # Remove rows where the split is 100% to 0%"
"0","    data_copy = data_copy[(data_copy['Proportions'] != '100.00%') & (data_copy['Proportions'] != '0.00%')]"
"0","    "
"0","    # Exclude the 'Risk' column"
"0","    data_copy = data_copy[data_copy['Variable'] != 'Risk_Group_ALAN']"
"0","    "
"0","    # Convert Proportions column to numeric"
"0","    data_copy['Proportions'] = data_copy['Proportions'].str.rstrip('%').astype(float)"
"0","    "
"0","    # Combine similar variables"
"0","    data_copy['Variable'] = data_copy['Variable'].str.split('_').str[0]  # Extract the part before '_'"
"0","    "
"0","    # Group by Variable and Levels, calculate mean and standard error of proportions"
"0","    grouped_data = data_copy.groupby(['Variable', 'Levels'])['Proportions'].agg(['mean', 'sem']).reset_index()"
"0","    "
"0","    # Initialize the plot"
"0","    sns.set(style=""whitegrid"")"
"0","    plt.figure(figsize=(16, 8))  # Increase figure width"
"0","    "
"0","    # Create the bar plot"
"0","    sns.barplot(data=grouped_data, x='Levels', y='mean', hue='Variable')"
"0","    "
"0","    # Add error bars"
"0","    plt.errorbar(x=np.arange(len(grouped_data['Levels'].unique())), y=grouped_data['mean'], "
"0","                 yerr=grouped_data['sem'], fmt='none', ecolor='black', capsize=3)  # Adjust capsize"
"0","    "
"0","    # Add labels above each bar"
"0","    for index, row in grouped_data.iterrows():"
"0","        plt.text(index, row['mean'], f""{row['mean']:.1f}"", ha='center', va='bottom', fontsize=6)"
"0","    "
"0","    # Set title and labels with adjusted font size"
"0","    plt.title(title, fontsize=16)"
"0","    plt.xlabel('Levels', fontsize=14)"
"0","    plt.ylabel('Proportion', fontsize=14)"
"0","    plt.xticks(rotation=45, fontsize=8, ha='right')  # Rotate x-axis labels and adjust font size"
"0","    plt.yticks(fontsize=8)  # Adjust font size for y-axis labels"
"0","    "
"0","    # Adjust legend size and position"
"0","    plt.legend(title='Variable', fontsize=6, title_fontsize=8, loc='upper right')"
"0","    "
"0","    # Adjust spacing"
"0","    plt.tight_layout()  # Adjust spacing"
"0","    "
"0","    # Show plot"
"0","    plt.show()"
"0","    "
"0","# Example usage:"
"0","# Plot combined categorical statistics"
"0","plot_combined_categorical_statistics(categorized_npt_pancreatic_stats, title=""Categorical Statistics for NPT- Pancreatic Cancer"")"
"0","plot_combined_categorical_statistics(categorized_resistant_pancreatic_stats, title=""Categorical Statistics for Resistant- Pancreatic Cancer"")"
